      <%- include('adminComponents/head') %>

         <%- include('adminComponents/header') %>

      <%- include('adminComponents/slidebar') %>
    <main class="admin-main">

      <!-- Orders Management -->
      <section id="orders" class="orders-management">
        <h2>Orders Management</h2>
        
        <% if (messages.success && messages.success.length > 0) { %>
            <div class="alert alert-success">
                <%= messages.success %>
            </div>
        <% } %>
        <% if (messages.error && messages.error.length > 0) { %>
            <div class="alert alert-error">
                <%= messages.error %>
            </div>
        <% } %>

        <div class="orders-filters">
            <div class="search-box">
                <input type="text" id="orderSearch" placeholder="Search orders...">
                <i class="fas fa-search"></i>
            </div>
            <div class="status-filter">
                <select id="statusFilter">
                    <option value="all">All Status</option>
                    <option value="Pending">Pending</option>
                    <option value="Processing">Processing</option>
                    <option value="Shipped">Shipped</option>
                    <option value="Delivered">Delivered</option>
                    <option value="Cancelled">Cancelled</option>
                </select>
            </div>
        </div>

        <div class="table-responsive">
            <table class="orders-table">
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Customer</th>
                        <th>Date</th>
                        <th>Total</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (orders && orders.length > 0) { %>
                        <% orders.forEach(order => { %>
                            <tr data-order-id="<%= order._id %>">
                                <td>#<%= order._id.toString().substring(0, 8) %></td>
                                <td><%= order.user ? order.user.username : 'Deleted User' %></td>
                                <td><%= new Date(order.orderDate).toLocaleDateString() %></td>
                                <td>$<%= order.finalTotal.toFixed(2) %></td>
                                <td>
                                    <select class="status-select" data-order-id="<%= order._id %>">
                                        <option value="Pending" <%= order.orderStatus === 'Pending' ? 'selected' : '' %>>Pending</option>
                                        <option value="Processing" <%= order.orderStatus === 'Processing' ? 'selected' : '' %>>Processing</option>
                                        <option value="Shipped" <%= order.orderStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                        <option value="Delivered" <%= order.orderStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                        <option value="Cancelled" <%= order.orderStatus === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                                    </select>
                                </td>
                                <td>
                                    <button class="view" onclick="viewOrderDetails('<%= order._id %>')">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="6" class="no-orders">No orders found</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
      </section>

      </main>

<!-- Order Details Modal -->
<div id="orderDetailsModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <div id="orderDetailsContent"></div>
    </div>
</div>

<style>
    .orders-management {
        padding: 20px;
    }

    .orders-filters {
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px;
        gap: 20px;
    }

    .search-box {
        position: relative;
        flex: 1;
    }

    .search-box input {
        width: 100%;
        padding: 10px 35px 10px 15px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 14px;
    }

    .search-box i {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        color: #666;
    }

    .status-filter select {
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 14px;
        min-width: 150px;
    }

    .table-responsive {
        overflow-x: auto;
    }

    .orders-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        background: white;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    }

    .orders-table th,
    .orders-table td {
        padding: 15px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    .orders-table th {
        background-color: #f8f9fa;
        font-weight: 600;
    }

    .status-select {
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 4px;
        background-color: white;
    }

    .view {
        background: none;
        border: none;
        color: #2196F3;
        cursor: pointer;
        padding: 5px;
    }

    .view:hover {
        color: #1976D2;
    }

    .no-orders {
        text-align: center;
        color: #666;
        padding: 20px;
    }

    /* Modal Styles */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: white;
        margin: 5% auto;
        padding: 30px;
        border-radius: 10px;
        width: 90%;
        max-width: 900px;
        position: relative;
        max-height: 90vh;
        overflow-y: auto;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }

    .close {
        position: absolute;
        right: 20px;
        top: 20px;
        font-size: 32px;
        font-weight: bold;
        color: #aaa;
        cursor: pointer;
        transition: color 0.3s ease;
    }

    .close:hover,
    .close:focus {
        color: #333;
    }

    .order-details-id {
        color: #555;
        font-size: 0.9em;
        margin-left: 5px;
    }

    .order-details-section {
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 1px solid #eee;
    }

    .order-details-section:last-child {
        border-bottom: none;
        margin-bottom: 0;
        padding-bottom: 0;
    }

    .order-details-summary {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 15px;
        margin-bottom: 25px;
    }

    .detail-item {
        font-size: 16px;
        color: #333;
    }

    .detail-item strong {
        color: #555;
        margin-right: 8px;
    }

    .status-badge {
        padding: 5px 10px;
        border-radius: 5px;
        font-weight: bold;
        color: white;
        font-size: 13px;
    }

    .status-pending { background-color: #ffc107; }
    .status-processing { background-color: #17a2b8; }
    .status-shipped { background-color: #007bff; }
    .status-delivered { background-color: #28a745; }
    .status-cancelled { background-color: #dc3545; }
    .status-refunded { background-color: #6c757d; }

    .order-details-items h3 {
        margin-bottom: 15px;
        color: #333;
    }

    .items-list {
        display: grid;
        gap: 15px;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    }

    .item-card {
        display: flex;
        align-items: center;
        background-color: #f9f9f9;
        border-radius: 8px;
        padding: 10px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        transition: transform 0.2s ease;
    }

    .item-card:hover {
        transform: translateY(-3px);
    }

    .item-image {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 5px;
        margin-right: 15px;
    }

    .item-info {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
    }

    .item-name {
        font-weight: bold;
        color: #333;
        margin-bottom: 2px;
    }

    .item-quantity,
    .item-price {
        font-size: 14px;
        color: #666;
        margin-bottom: 2px;
    }

    .item-total {
        font-weight: bold;
        color: #2196F3;
        font-size: 15px;
        margin-top: 5px;
    }

    .order-details-totals {
        padding-top: 15px;
    }

    .order-details-totals .total-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
        font-size: 17px;
    }

    .order-details-totals .total-row strong {
        flex-basis: 50%;
        text-align: right;
        padding-right: 10px;
    }

    .order-details-totals .total-row span {
        flex-basis: 50%;
        text-align: left;
    }

    .grand-total {
        font-size: 20px;
        font-weight: bold;
        color: #007bff;
        border-top: 1px solid #eee;
        padding-top: 15px;
        margin-top: 15px;
    }

    .grand-total strong,
    .grand-total span {
        font-size: 20px;
        color: #007bff;
    }

    @media (max-width: 768px) {
        .modal-content {
            width: 95%;
            margin: 3% auto;
            padding: 20px;
        }

        .orders-filters {
            flex-direction: column;
        }

        .status-filter select {
            width: 100%;
        }

        .order-details-summary {
            grid-template-columns: 1fr;
        }

        .items-list {
            grid-template-columns: 1fr;
        }
    }

    .alert {
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 4px;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .alert-error {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }
</style>

<script>
    // Search functionality
    document.getElementById('orderSearch').addEventListener('input', function(e) {
        const searchTerm = e.target.value.toLowerCase();
        const rows = document.querySelectorAll('.orders-table tbody tr');
        
        rows.forEach(row => {
            const text = row.textContent.toLowerCase();
            row.style.display = text.includes(searchTerm) ? '' : 'none';
        });
    });

    // Status filter
    document.getElementById('statusFilter').addEventListener('change', function(e) {
        const status = e.target.value;
        const rows = document.querySelectorAll('.orders-table tbody tr');
        
        rows.forEach(row => {
            if (status === 'all') {
                row.style.display = '';
            } else {
                const rowStatus = row.querySelector('.status-select').value;
                row.style.display = rowStatus === status ? '' : 'none';
            }
        });
    });

    // Status update
    document.querySelectorAll('.status-select').forEach(select => {
        select.addEventListener('change', async function(e) {
            const orderId = this.dataset.orderId;
            const newStatus = this.value;
            
            try {
                const response = await fetch(`/admin/orders/${orderId}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ status: newStatus })
                });
                
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        // Show success message
                        const alert = document.createElement('div');
                        alert.className = 'alert alert-success';
                        alert.textContent = 'Order status updated successfully';
                        document.querySelector('.orders-management').insertBefore(alert, document.querySelector('.orders-filters'));
                        
                        // Remove alert after 3 seconds
                        setTimeout(() => alert.remove(), 3000);
                    }
                }
            } catch (error) {
                console.error('Error updating order status:', error);
            }
        });
    });

    // Modal functionality
    const modal = document.getElementById('orderDetailsModal');
    const closeBtn = document.querySelector('.close');

    function viewOrderDetails(orderId) {
        fetch(`/admin/orders/${orderId}`)
            .then(response => response.json())
            .then(data => {
                const content = document.getElementById('orderDetailsContent');
                content.innerHTML = `
                    <h2>Order Details <span class="order-details-id">#${orderId.substring(0, 8)}</span></h2>
                    <div class="order-details-section order-details-summary">
                        <div class="detail-item">
                            <strong>Customer:</strong>
                            <span>${data.order.user.username}</span>
                        </div>
                        <div class="detail-item">
                            <strong>Date:</strong>
                            <span>${new Date(data.order.orderDate).toLocaleString()}</span>
                        </div>
                        <div class="detail-item">
                            <strong>Status:</strong>
                            <span class="status-badge status-${data.order.orderStatus.toLowerCase()}">${data.order.orderStatus}</span>
                        </div>
                        <div class="detail-item">
                            <strong>Payment Method:</strong>
                            <span>${data.order.paymentMethod}</span>
                        </div>
                    </div>

                    <div class="order-details-section order-details-items">
                        <h3>Items</h3>
                        <div class="items-list">
                            ${data.order.items.map(item => `
                                <div class="item-card">
                                    <img src="${item.imageUrl || item.imagePath}" alt="${item.name}" class="item-image">
                                    <div class="item-info">
                                        <span class="item-name">${item.name}</span>
                                        <span class="item-quantity">Quantity: ${item.quantity}</span>
                                        <span class="item-price">Unit Price: $${item.priceAtPurchase.toFixed(2)}</span>
                                        <span class="item-total">Total: $${(item.priceAtPurchase * item.quantity).toFixed(2)}</span>
                                    </div>
                                </div>
                            `).join('')}
                        </div>
                    </div>

                    <div class="order-details-section order-details-totals">
                        <div class="detail-item total-row">
                            <strong>Subtotal:</strong>
                            <span>$${data.order.totalAmount.toFixed(2)}</span>
                        </div>
                        <div class="detail-item total-row">
                            <strong>Shipping:</strong>
                            <span>$${data.order.shippingCost.toFixed(2)}</span>
                        </div>
                        <div class="detail-item total-row grand-total">
                            <strong>Grand Total:</strong>
                            <span>$${data.order.finalTotal.toFixed(2)}</span>
                        </div>
                    </div>
                `;
                modal.style.display = 'block';
            })
            .catch(error => console.error('Error fetching order details:', error));
    }

    closeBtn.onclick = function() {
        modal.style.display = 'none';
    }

    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = 'none';
        }
    }
</script>
