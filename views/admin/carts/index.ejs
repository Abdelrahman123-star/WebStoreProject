<%- include('../adminComponents/head') %>
<%- include('../adminComponents/header') %>
<%- include('../adminComponents/slideBar') %>
<%- include('../adminComponents/switchLanguage') %>

<div class="main-content">
    <div class="header">
        <div class="header-content">
            <h1 data-i18n="adminCarts.title">Manage Carts</h1>
        </div>
    </div>

    <div id="messageContainer" class="message-container"></div>

    <div class="content">
        <% if (carts && carts.length > 0) { %>
            <div class="carts-grid">
                <% carts.forEach(cart => { %>
                    <div class="cart-card" data-cart-id="<%= cart._id %>">
                        <div class="cart-header">
                            <div class="user-info">
                                <i class="fas fa-user"></i>
                                <span><%= cart.user ? cart.user.username : 'Unknown User' %></span>
                            </div>
                            <div class="cart-date">
                                <i class="far fa-calendar-alt"></i>
                                <span><%= new Date(cart.createdAt).toLocaleDateString() %></span>
                            </div>
                        </div>

                        <div class="cart-items">
                            <% if (cart.items && cart.items.length > 0) { %>
                                <% cart.items.slice(0, 3).forEach(item => { %>
                                    <div class="cart-item">
                                        <img src="<%= item.product.imageUrl || item.product.imagePath %>" 
                                             alt="<%= item.product.name %>"
                                             class="item-image">
                                        <div class="item-details">
                                            <span class="item-name"><%= item.product.name %></span>
                                            <% if (item.discountPercentage > 0) { %>
                                                <span class="item-price original-price">EGP <s><%= item.originalPrice ? item.originalPrice.toFixed(2) : '0.00' %></s></span>
                                                <span class="item-price discounted-price">EGP <%= item.currentPrice ? item.currentPrice.toFixed(2) : '0.00' %></span>
                                                <span class="item-discount-badge"><%= item.discountPercentage ? item.discountPercentage : '0' %>% OFF</span>
                                            <% } else { %>
                                                <span class="item-price">EGP <%= item.currentPrice ? item.currentPrice.toFixed(2) : '0.00' %></span>
                                            <% } %>
                                            <span class="item-quantity"><span data-i18n="adminCarts.quantity">Qty:</span> <%= item.quantity %></span>
                                        </div>
                                    </div>
                                <% }); %>
                                <% if (cart.items.length > 3) { %>
                                    <div class="more-items" data-i18n="adminCarts.moreItems">+<%= cart.items.length - 3 %> more items</div>
                                <% } %>
                            <% } else { %>
                                <div class="empty-cart" data-i18n="adminCarts.emptyCart">No items in cart</div>
                            <% } %>
                        </div>

                        <div class="cart-footer">
                            <div class="cart-total">
                                <span data-i18n="adminCarts.total">Total:</span>
                                <span class="amount">EGP <%= cart.totalAmount ? cart.totalAmount.toFixed(2) : '0.00' %></span>
                            </div>
                            <div class="cart-actions">
                                <a href="/admin/carts/<%= cart._id %>" class="btn-view">
                                    <i class="fas fa-eye"></i>
                                    <span data-i18n="adminCarts.viewDetails">View Details</span>
                                </a>
                                <% if (cart._id) { %>
                                <button class="btn-delete" onclick="showDeleteConfirmation('<%= cart._id %>')">
                                    <i class="fas fa-trash"></i>
                                    <span data-i18n="adminCarts.delete">Delete</span>
                                </button>
                                <% } %>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
        <% } else { %>
            <div class="no-carts">
                <i class="fas fa-shopping-basket"></i>
                <h2 data-i18n="adminCarts.noCarts">No Carts Found</h2>
                <p data-i18n="adminCarts.noCartsMessage">There are no active shopping carts at the moment.</p>
            </div>
        <% } %>
    </div>
</div>

<div id="deleteConfirmationModal" class="modal">
    <div class="modal-content">
        <span class="close-button">&times;</span>
        <h2 data-i18n="adminCarts.deleteConfirmTitle">Confirm Deletion</h2>
        <p data-i18n="adminCarts.deleteConfirmMessage">Are you sure you want to delete this cart? This action cannot be undone.</p>
        <div class="modal-actions">
            <button id="confirmDeleteBtn" class="btn btn-danger" data-i18n="adminCarts.confirmDelete">Yes, Delete</button>
            <button id="cancelDeleteBtn" class="btn btn-secondary" data-i18n="adminCarts.cancelDelete">No, Cancel</button>
        </div>
    </div>
</div>

<!-- Add i18next and plugins from CDN -->
<script src="https://unpkg.com/i18next/dist/umd/i18next.min.js"></script>
<script src="https://unpkg.com/i18next-http-backend/i18nextHttpBackend.min.js"></script>
<script src="https://unpkg.com/i18next-browser-languagedetector/i18nextBrowserLanguageDetector.min.js"></script>
<script src="/js/i18n.js"></script>

<style>
/* General Layout */
.main-content {
    padding: 2rem;
    margin-left: 250px; /* Adjust for sidebar */
    margin-top: 60px;  /* Adjust for header */
    min-height: calc(100vh - 60px);
    background-color: #f0f2f5;
    font-family: 'Poppins', sans-serif;
    color: #333;
}

/* Header */
.header {
    margin-bottom: 2rem;
}

.header h1 {
    color: #2c3e50;
    font-size: 2.2rem;
    margin: 0;
    font-weight: 700;
    letter-spacing: -0.5px;
    background: linear-gradient(135deg, #ffffff, #f9f9f9);
    padding: 1.2rem 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
}

/* Content Area */
.content {
    padding: 1rem;
}

/* Grid Layout */
.carts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
}

/* Cart Cards */
.cart-card {
    background: #ffffff;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.cart-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
}

.cart-header {
    padding: 1rem 1.5rem;
    background-color: #f8f9fa;
    border-bottom: 1px solid #e0e0e0;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.user-info, .cart-date {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: #636e72;
    font-size: 0.95rem;
}

.user-info i {
    color: #3498db;
    font-size: 1.1rem;
}

.cart-date i {
    color: #7f8c8d;
    font-size: 1.1rem;
}

.cart-items {
    padding: 1rem 1.5rem;
    max-height: 200px;
    overflow-y: auto;
}

.cart-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 0.75rem 0;
    border-bottom: 1px dashed #ecf0f1;
}

.cart-item:last-child {
    border-bottom: none;
}

.item-image {
    width: 60px;
    height: 60px;
    object-fit: cover;
    border-radius: 8px;
    border: 1px solid #eee;
}

.item-details {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
}

.item-name {
    font-weight: 600;
    color: #2d3436;
    font-size: 1.05rem;
}

.item-price {
    font-size: 0.9rem;
    color: #636e72;
}

.item-quantity {
    font-size: 0.9rem;
    color: #636e72;
}

.more-items {
    text-align: center;
    padding: 0.5rem 1.5rem;
    color: #3498db;
    font-size: 0.9rem;
    font-weight: 500;
}

.empty-cart {
    text-align: center;
    padding: 1.5rem;
    color: #95a5a6;
    font-size: 1rem;
}

.cart-footer {
    padding: 1rem 1.5rem;
    border-top: 1px solid #e0e0e0;
    background-color: #f8f9fa;
}

.cart-total {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    font-weight: 700;
    font-size: 1.15rem;
}

.amount {
    color: #27ae60; /* Success green for total */
}

.cart-actions {
    display: flex;
    gap: 0.8rem;
}

.btn-view, .btn-delete {
    flex: 1;
    padding: 0.8rem 1rem;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.6rem;
    font-size: 1rem;
    font-weight: 600;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.btn-view {
    background: linear-gradient(45deg, #3498db, #2980b9);
    color: white;
    text-decoration: none;
}

.btn-view:hover {
    background: linear-gradient(45deg, #2980b9, #3498db);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.btn-delete {
    background: linear-gradient(45deg, #e74c3c, #c0392b);
    color: white;
}

.btn-delete:hover {
    background: linear-gradient(45deg, #c0392b, #e74c3c);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

/* No Carts State */
.no-carts {
    text-align: center;
    padding: 3rem;
    background: #ffffff;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
}

.no-carts i {
    font-size: 5rem;
    color: #bdc3c7;
    margin-bottom: 1.5rem;
}

.no-carts h2 {
    color: #2c3e50;
    font-size: 2rem;
    margin-bottom: 0.8rem;
}

.no-carts p {
    color: #7f8c8d;
    font-size: 1.1rem;
}

/* Responsive Design */
@media (max-width: 768px) {
    .main-content {
        margin-left: 0;
        padding: 1rem;
    }

    .header h1 {
        font-size: 1.8rem;
        padding: 1rem 1.5rem;
    }

    .carts-grid {
        grid-template-columns: 1fr;
    }

    .cart-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
    }

    .cart-actions {
        flex-direction: column;
    }
}

/* Modal Styles */
.modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1000; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    justify-content: center;
    align-items: center;
}

.modal-content {
    background-color: #fefefe;
    margin: auto;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    width: 90%;
    max-width: 400px;
    text-align: center;
    position: relative;
    animation: fadeIn 0.3s ease-out;
}

.modal-content h2 {
    color: #2c3e50;
    margin-bottom: 15px;
    font-size: 1.8rem;
}

.modal-content p {
    color: #555;
    margin-bottom: 25px;
    font-size: 1.1rem;
    line-height: 1.5;
}

.close-button {
    color: #aaa;
    position: absolute;
    top: 15px;
    right: 20px;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

.close-button:hover,
.close-button:focus {
    color: #333;
    text-decoration: none;
}

.modal-actions {
    display: flex;
    justify-content: center;
    gap: 15px;
}

.modal-actions .btn {
    padding: 12px 25px;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
}

.modal-actions .btn-danger {
    background-color: #e74c3c;
    color: white;
    border: none;
}

.modal-actions .btn-danger:hover {
    background-color: #c0392b;
    transform: translateY(-2px);
}

.modal-actions .btn-secondary {
    background-color: #95a5a6;
    color: white;
    border: none;
}

.modal-actions .btn-secondary:hover {
    background-color: #7f8c8d;
    transform: translateY(-2px);
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-20px); }
    to { opacity: 1; transform: translateY(0); }
}

/* Message Container Styles */
.message-container {
    position: fixed;
    top: 70px; /* Below the header */
    left: 50%;
    transform: translateX(-50%);
    z-index: 1000;
    width: 90%;
    max-width: 500px;
    padding: 10px 20px;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    text-align: center;
    font-weight: 600;
    font-size: 1rem;
    animation: slideIn 0.3s ease-out;
}

.alert-message-success {
    background-color: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
}

.alert-message-error {
    background-color: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
}

@keyframes slideIn {
    from { top: 0; opacity: 0; }
    to { top: 70px; opacity: 1; }
}
</style>

<script>
    const deleteConfirmationModal = document.getElementById('deleteConfirmationModal');
    const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
    const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');
    const closeButton = document.querySelector('.close-button');
    let cartIdToDelete = null;

    function showDeleteConfirmation(cartId) {
        if (!cartId || cartId === 'null' || cartId === '') {
            displayMessage(i18next.t('adminCarts.invalidCartId'), 'error');
            return;
        }
        cartIdToDelete = cartId;
        deleteConfirmationModal.style.display = 'flex';
    }

    function hideDeleteConfirmation() {
        deleteConfirmationModal.style.display = 'none';
        cartIdToDelete = null;
    }

    // Event Listeners
    closeButton.addEventListener('click', hideDeleteConfirmation);
    cancelDeleteBtn.addEventListener('click', hideDeleteConfirmation);

    window.addEventListener('click', (event) => {
        if (event.target === deleteConfirmationModal) {
            hideDeleteConfirmation();
        }
    });

    confirmDeleteBtn.addEventListener('click', async () => {
        if (!cartIdToDelete) {
            displayMessage(i18next.t('adminCarts.invalidCartId'), 'error');
            hideDeleteConfirmation();
            return;
        }

        try {
            const response = await fetch(`/admin/carts/${cartIdToDelete}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            const data = await response.json();

            if (!response.ok) {
                throw new Error(data.error || i18next.t('adminCarts.deleteError'));
            }

            if (data.success) {
                const cartCard = document.querySelector(`[data-cart-id="${cartIdToDelete}"]`);
                if (cartCard) {
                    cartCard.remove();
                }

                const remainingCarts = document.querySelectorAll('.cart-card');
                if (remainingCarts.length === 0) {
                    location.reload();
                }

                displayMessage(i18next.t('adminCarts.deleteSuccess'), 'success');
            }
        } catch (error) {
            console.error('Error:', error);
            displayMessage(error.message || i18next.t('adminCarts.deleteError'), 'error');
        } finally {
            hideDeleteConfirmation();
        }
    });

    function displayMessage(message, type) {
        const messageContainer = document.getElementById('messageContainer');
        const messageElement = document.createElement('div');
        messageElement.className = `alert-message alert-message-${type}`;
        messageElement.textContent = message;

        messageContainer.innerHTML = '';
        messageContainer.appendChild(messageElement);

        setTimeout(() => {
            messageElement.remove();
        }, 5000);
    }
</script>

